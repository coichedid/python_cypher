
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '9ECD1D72800598087ED2B65A3BC535D3'
    
_lr_action_items = {'RETURN':([6,8,9,21,28,32,33,34,36,37,42,55,58,67,68,69,70,71,],[-21,12,12,12,-23,-22,-24,-25,-9,-14,-1,-12,-2,-10,-11,-13,-8,-3,]),'LBRACKET':([15,31,],[29,29,]),'LESSTHAN':([6,8,9,28,32,33,34,42,58,71,],[-21,16,16,16,16,16,16,-1,-2,-3,]),'LEFT_ARROW':([6,8,9,28,32,33,34,42,58,71,],[-21,18,18,18,18,18,18,-1,-2,-3,]),'DOT':([25,26,38,41,46,47,61,62,],[44,45,44,45,44,45,-15,-16,]),'RPAREN':([23,36,43,54,55,57,67,68,69,70,77,78,79,80,],[42,-9,58,69,-12,71,-10,-11,-13,-8,-5,-7,-4,-6,]),'RCURLEY':([74,77,78,79,80,],[80,-5,-7,-4,-6,]),'CREATE':([0,],[4,]),'COMMA':([6,8,9,13,20,25,26,28,32,33,34,35,42,46,47,57,58,61,62,71,74,77,78,79,80,],[-21,17,17,27,27,-31,-32,17,17,17,17,27,-1,-33,-34,72,-2,-15,-16,-3,72,72,72,-4,-6,]),'RIGHT_ARROW':([6,8,9,28,32,33,34,42,58,71,],[-21,14,14,14,14,14,14,-1,-2,-3,]),'COLON':([7,11,29,49,59,],[10,24,48,64,73,]),'LCURLEY':([43,60,72,73,],[60,60,60,60,]),'STRING':([56,73,],[70,79,]),'EQUALS':([41,61,62,],[56,-15,-16,]),'DASH':([6,8,9,16,28,30,32,33,34,42,51,58,71,75,81,],[-21,15,15,31,15,50,15,15,15,-1,66,-2,-3,-17,-18,]),'GREATERTHAN':([50,],[65,]),'LPAREN':([4,5,14,17,18,19,22,39,40,52,53,65,66,],[7,7,7,7,7,7,39,39,39,39,39,-19,-20,]),'WHERE':([6,9,28,32,33,34,42,58,71,],[-21,22,-23,-22,-24,-25,-1,-2,-3,]),'MATCH':([0,],[5,]),'AND':([36,37,54,55,67,68,69,70,],[-9,52,52,52,52,52,-13,-8,]),'NAME':([10,24,48,64,],[23,43,63,76,]),'KEY':([7,12,22,27,29,39,40,43,44,45,52,53,60,72,73,],[11,25,38,46,49,38,38,59,61,62,38,38,59,59,59,]),'NOT':([22,39,40,52,53,],[40,40,40,40,40,]),'RBRACKET':([63,76,],[75,81,]),'$end':([1,2,3,13,20,25,26,35,46,47,61,62,],[-29,-30,0,-28,-26,-31,-32,-27,-33,-34,-15,-16,]),'OR':([36,37,54,55,67,68,69,70,],[-9,53,53,53,53,53,-13,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'match_return':([0,],[1,]),'constraint':([22,39,40,52,53,],[36,36,36,36,36,]),'literals':([4,5,14,17,18,19,],[8,9,28,32,33,34,]),'where_clause':([9,],[21,]),'create':([0,],[2,]),'edge_condition':([15,31,],[30,51,]),'full_query':([0,],[3,]),'constraint_list':([22,39,40,52,53,],[37,54,55,67,68,]),'condition_list':([43,60,72,73,],[57,74,77,78,]),'node_clause':([4,5,14,17,18,19,],[6,6,6,6,6,6,]),'return_variables':([8,9,21,],[13,20,35,]),'labeled_edge':([8,9,28,32,33,34,],[19,19,19,19,19,19,]),'keypath':([12,22,27,39,40,52,53,],[26,41,47,41,41,41,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> full_query","S'",1,None,None,None),
  ('node_clause -> LPAREN COLON NAME RPAREN','node_clause',4,'p_node_clause','cypher_parser.py',133),
  ('node_clause -> LPAREN KEY COLON NAME RPAREN','node_clause',5,'p_node_clause','cypher_parser.py',134),
  ('node_clause -> LPAREN KEY COLON NAME condition_list RPAREN','node_clause',6,'p_node_clause','cypher_parser.py',135),
  ('condition_list -> KEY COLON STRING','condition_list',3,'p_condition','cypher_parser.py',158),
  ('condition_list -> condition_list COMMA condition_list','condition_list',3,'p_condition','cypher_parser.py',159),
  ('condition_list -> LCURLEY condition_list RCURLEY','condition_list',3,'p_condition','cypher_parser.py',160),
  ('condition_list -> KEY COLON condition_list','condition_list',3,'p_condition','cypher_parser.py',161),
  ('constraint -> keypath EQUALS STRING','constraint',3,'p_constraint','cypher_parser.py',175),
  ('constraint_list -> constraint','constraint_list',1,'p_constraint_list','cypher_parser.py',180),
  ('constraint_list -> constraint_list AND constraint_list','constraint_list',3,'p_constraint_list','cypher_parser.py',181),
  ('constraint_list -> constraint_list OR constraint_list','constraint_list',3,'p_constraint_list','cypher_parser.py',182),
  ('constraint_list -> NOT constraint_list','constraint_list',2,'p_constraint_list','cypher_parser.py',183),
  ('constraint_list -> LPAREN constraint_list RPAREN','constraint_list',3,'p_constraint_list','cypher_parser.py',184),
  ('where_clause -> WHERE constraint_list','where_clause',2,'p_where_clause','cypher_parser.py',189),
  ('keypath -> KEY DOT KEY','keypath',3,'p_keypath','cypher_parser.py',194),
  ('keypath -> keypath DOT KEY','keypath',3,'p_keypath','cypher_parser.py',195),
  ('edge_condition -> LBRACKET COLON NAME RBRACKET','edge_condition',4,'p_edge_condition','cypher_parser.py',207),
  ('edge_condition -> LBRACKET KEY COLON NAME RBRACKET','edge_condition',5,'p_edge_condition','cypher_parser.py',208),
  ('labeled_edge -> DASH edge_condition DASH GREATERTHAN','labeled_edge',4,'p_labeled_edge','cypher_parser.py',219),
  ('labeled_edge -> LESSTHAN DASH edge_condition DASH','labeled_edge',4,'p_labeled_edge','cypher_parser.py',220),
  ('literals -> node_clause','literals',1,'p_literals','cypher_parser.py',232),
  ('literals -> literals COMMA literals','literals',3,'p_literals','cypher_parser.py',233),
  ('literals -> literals RIGHT_ARROW literals','literals',3,'p_literals','cypher_parser.py',234),
  ('literals -> literals LEFT_ARROW literals','literals',3,'p_literals','cypher_parser.py',235),
  ('literals -> literals labeled_edge literals','literals',3,'p_literals','cypher_parser.py',236),
  ('match_return -> MATCH literals return_variables','match_return',3,'p_match_return','cypher_parser.py',272),
  ('match_return -> MATCH literals where_clause return_variables','match_return',4,'p_match_return','cypher_parser.py',273),
  ('create -> CREATE literals return_variables','create',3,'p_create','cypher_parser.py',283),
  ('full_query -> match_return','full_query',1,'p_full_query','cypher_parser.py',288),
  ('full_query -> create','full_query',1,'p_full_query','cypher_parser.py',289),
  ('return_variables -> RETURN KEY','return_variables',2,'p_return_variables','cypher_parser.py',294),
  ('return_variables -> RETURN keypath','return_variables',2,'p_return_variables','cypher_parser.py',295),
  ('return_variables -> return_variables COMMA KEY','return_variables',3,'p_return_variables','cypher_parser.py',296),
  ('return_variables -> return_variables COMMA keypath','return_variables',3,'p_return_variables','cypher_parser.py',297),
]
